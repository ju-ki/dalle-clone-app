import React, {useState, useEffect} from 'react'
import { Loader, Card, FormField } from '../components'
import { CardProps, PostProps } from '../assets/types/types';



const RenderCards = ({data, title}: CardProps) => {
  if(data?.length > 0) {
    return data.map((post:PostProps) => <Card key={post._id} {...post}/>)
  }
  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text0xl uppercase'>{title}</h2>
  );
}

export const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState<PostProps[]>([]);
  const [searchText, setSearchText] = useState("");
  const [searchTimeout, setSearchTimeout] = useState<number>(0);
  const [searchResult, setSearchedResults] = useState<PostProps[]>([]);

  useEffect(() => {
    async function fetchPosts() {
      setLoading(true);
      const response = await fetch('http://localhost:8080/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });
      try {
        const result = await response.json();
        console.log(result);
        setAllPosts(result.data.reverse());
      } catch(err) {
        console.log(err)
      } finally {
        setLoading(false);
      }
    }
    fetchPosts();
  }, []);

  const handleSearchChange = (e:React.ChangeEvent<HTMLInputElement>) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult: PostProps[] = allPosts.filter((item:PostProps) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );
  };
  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>
          The Community Showcase
        </h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px]'>
          Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
        </p>
      </div>
      <div className='mt-16'>
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>
      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader/>
          </div>
        ): (
          <>
            {searchText && (
              <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing Results for <span className='text-[#222328]'>{searchText}</span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCards
                  data={searchResult}
                  title="No search results found"
                />
              ): (
                <RenderCards
                  data={allPosts}
                  title="No posts found"
                />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  )
}
